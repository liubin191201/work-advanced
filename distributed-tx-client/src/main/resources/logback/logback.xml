<?xml version="1.0" encoding="UTF-8"?>
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:noNamespaceSchemaLocation="http://www.padual.com/java/logback.xsd">
<!--    <include resource="org/springframework/boot/logging/logback/base.xml"/>-->
    <!-- 项目名称 -->
    <property name="PROJECT_NAME" value="distributed-tx-client"/>
    <!-- 定义日志文件 输入位置 -->
    <property name="LOG_HOME" value="/data/logs"/>
    <!--日志格式-->
    <property name="logPatternLayout"
              value='{"level":"%-5level","time":"%d{yyyy-MM-dd HH:mm:ss.SSS}","traceId":"%X{THREAD_UNIQUE_ID}","userId":"%X{THREAD_USER_ID}","function":"%C.%M,%L","content":"%msg"}%n'/>

    <!--# Console -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 典型的日志pattern -->
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- ERROR级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/%d{yyyy-MM-dd}/error.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
        </encoder>
    </appender>

    <!-- WARN级别日志 appender -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/%d{yyyy-MM-dd}/warn.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
        </encoder>
    </appender>

    <!-- INFO级别日志 appender -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录INFO级别的日志 -->
        <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--            <level>INFO</level>-->
        <!--            <onMatch>ACCEPT</onMatch>-->
        <!--            <onMismatch>DENY</onMismatch>-->
        <!--        </filter>-->
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
            <charset>UTF-8</charset> <!-- 此处设置字符集 -->
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/%d{yyyy-MM-dd}/info.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
        </encoder>
    </appender>

    <!-- DEBUG级别日志 appender -->
    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录DEBUG级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}/%d{yyyy-MM-dd}/debug.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern><![CDATA[ ${logPatternLayout} ]]></pattern>
        </encoder>
    </appender>

    <!--Mybatis设置 -->
    <logger name="com.apache.ibatis" level="INFO"/>
    <logger name="java.sql.Connection" level="INFO"/>
    <logger name="java.sql.Statement" level="INFO"/>
    <logger name="java.sql.PreparedStatement" level="INFO"/>

    <!-- root级别   DEBUG -->
    <root level="INFO">
        <!-- 控制台输出 STDOUT-->
        <appender-ref ref="STDOUT"/>
        <!-- 文件输出 -->
        <appender-ref ref="ERROR"/>
        <appender-ref ref="INFO"/>
        <appender-ref ref="WARN"/>
        <appender-ref ref="DEBUG"/>
    </root>
</configuration>